# Generated by Django 5.2.4 on 2025-08-07 07:52

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('employees', '0013_remove_employee_dummy_ssn'),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=200, verbose_name='프로젝트명')),
                ('description', models.TextField(verbose_name='프로젝트 설명')),
                ('status', models.CharField(choices=[('PLANNING', '기획 중'), ('ACTIVE', '진행 중'), ('COMPLETED', '완료'), ('CANCELLED', '취소'), ('ON_HOLD', '보류')], default='PLANNING', max_length=20, verbose_name='상태')),
                ('priority', models.CharField(choices=[('LOW', '낮음'), ('MEDIUM', '보통'), ('HIGH', '높음'), ('CRITICAL', '긴급')], default='MEDIUM', max_length=20, verbose_name='우선순위')),
                ('start_date', models.DateField(verbose_name='시작일')),
                ('end_date', models.DateField(verbose_name='종료일')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일시')),
                ('budget', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='예산')),
                ('estimated_hours', models.IntegerField(default=0, verbose_name='예상 작업시간')),
                ('required_skills', models.JSONField(default=list, verbose_name='필요 스킬')),
                ('team_size_min', models.IntegerField(default=1, verbose_name='최소 팀 크기')),
                ('team_size_max', models.IntegerField(default=10, verbose_name='최대 팀 크기')),
                ('success_criteria', models.JSONField(default=list, verbose_name='성공 기준')),
                ('risk_factors', models.JSONField(default=list, verbose_name='리스크 요소')),
            ],
            options={
                'verbose_name': '프로젝트',
                'verbose_name_plural': '프로젝트',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TeamTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='템플릿명')),
                ('template_type', models.CharField(choices=[('DEVELOPMENT', '개발'), ('DESIGN', '디자인'), ('MARKETING', '마케팅'), ('RESEARCH', '연구'), ('CONSULTING', '컨설팅'), ('OPERATIONS', '운영'), ('CUSTOM', '커스텀')], max_length=20, verbose_name='템플릿 유형')),
                ('description', models.TextField(verbose_name='설명')),
                ('recommended_roles', models.JSONField(default=list, verbose_name='추천 역할')),
                ('skill_requirements', models.JSONField(default=list, verbose_name='스킬 요구사항')),
                ('team_size_range', models.JSONField(default=dict, verbose_name='팀 크기 범위')),
                ('usage_count', models.IntegerField(default=0, verbose_name='사용 횟수')),
                ('success_rate', models.FloatField(default=0.0, verbose_name='성공률')),
                ('average_score', models.FloatField(default=0.0, verbose_name='평균 점수')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일시')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성화')),
            ],
            options={
                'verbose_name': '팀 템플릿',
                'verbose_name_plural': '팀 템플릿',
                'ordering': ['-usage_count', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TeamComposition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('composition_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=200, verbose_name='팀 구성명')),
                ('description', models.TextField(blank=True, verbose_name='설명')),
                ('status', models.CharField(choices=[('DRAFT', '임시'), ('PROPOSED', '제안됨'), ('APPROVED', '승인됨'), ('ACTIVE', '활성'), ('COMPLETED', '완료'), ('REJECTED', '거절됨')], default='DRAFT', max_length=20, verbose_name='상태')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일시')),
                ('ai_generated', models.BooleanField(default=True, verbose_name='AI 생성')),
                ('compatibility_score', models.FloatField(default=0.0, verbose_name='호환성 점수')),
                ('efficiency_score', models.FloatField(default=0.0, verbose_name='효율성 점수')),
                ('risk_score', models.FloatField(default=0.0, verbose_name='리스크 점수')),
                ('overall_score', models.FloatField(default=0.0, verbose_name='종합 점수')),
                ('ai_analysis', models.JSONField(default=dict, verbose_name='AI 분석')),
                ('optimization_suggestions', models.JSONField(default=list, verbose_name='최적화 제안')),
                ('potential_issues', models.JSONField(default=list, verbose_name='잠재적 문제')),
                ('created_by', models.CharField(default='AI', max_length=100, verbose_name='생성자')),
                ('ai_model_version', models.CharField(default='1.0', max_length=50, verbose_name='AI 모델 버전')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_compositions', to='ai_team_optimizer.project', verbose_name='프로젝트')),
            ],
            options={
                'verbose_name': '팀 구성',
                'verbose_name_plural': '팀 구성',
                'ordering': ['-overall_score', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TeamAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diversity_score', models.FloatField(default=0.0, verbose_name='다양성 점수')),
                ('experience_balance', models.FloatField(default=0.0, verbose_name='경험 균형도')),
                ('skill_coverage', models.FloatField(default=0.0, verbose_name='스킬 커버리지')),
                ('communication_score', models.FloatField(default=0.0, verbose_name='소통 점수')),
                ('success_probability', models.FloatField(default=0.0, verbose_name='성공 확률')),
                ('timeline_risk', models.FloatField(default=0.0, verbose_name='일정 리스크')),
                ('budget_risk', models.FloatField(default=0.0, verbose_name='예산 리스크')),
                ('quality_score', models.FloatField(default=0.0, verbose_name='품질 점수')),
                ('strengths', models.JSONField(default=list, verbose_name='강점')),
                ('weaknesses', models.JSONField(default=list, verbose_name='약점')),
                ('opportunities', models.JSONField(default=list, verbose_name='기회요소')),
                ('threats', models.JSONField(default=list, verbose_name='위협요소')),
                ('ai_recommendations', models.JSONField(default=list, verbose_name='AI 추천사항')),
                ('improvement_suggestions', models.JSONField(default=list, verbose_name='개선 제안')),
                ('alternative_members', models.JSONField(default=list, verbose_name='대안 멤버')),
                ('analyzed_at', models.DateTimeField(auto_now=True, verbose_name='분석일시')),
                ('analysis_version', models.CharField(default='1.0', max_length=20, verbose_name='분석 버전')),
                ('team_composition', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='ai_team_optimizer.teamcomposition', verbose_name='팀 구성')),
            ],
            options={
                'verbose_name': '팀 분석',
                'verbose_name_plural': '팀 분석',
            },
        ),
        migrations.CreateModel(
            name='OptimizationHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('CREATE', '생성'), ('MODIFY', '수정'), ('OPTIMIZE', '최적화'), ('APPROVE', '승인'), ('REJECT', '거절')], max_length=20, verbose_name='액션')),
                ('description', models.TextField(verbose_name='설명')),
                ('changes_made', models.JSONField(default=list, verbose_name='변경사항')),
                ('score_before', models.FloatField(blank=True, null=True, verbose_name='변경 전 점수')),
                ('score_after', models.FloatField(blank=True, null=True, verbose_name='변경 후 점수')),
                ('ai_reasoning', models.TextField(blank=True, verbose_name='AI 추론')),
                ('confidence_level', models.FloatField(default=0.0, verbose_name='신뢰도')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
                ('created_by', models.CharField(default='AI', max_length=100, verbose_name='생성자')),
                ('team_composition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='optimization_history', to='ai_team_optimizer.teamcomposition', verbose_name='팀 구성')),
            ],
            options={
                'verbose_name': '최적화 기록',
                'verbose_name_plural': '최적화 기록',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SkillRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_name', models.CharField(max_length=100, verbose_name='스킬명')),
                ('category', models.CharField(default='TECHNICAL', max_length=50, verbose_name='카테고리')),
                ('required_proficiency', models.CharField(choices=[('BASIC', '기초'), ('INTERMEDIATE', '중급'), ('ADVANCED', '고급'), ('EXPERT', '전문가')], max_length=20, verbose_name='요구 숙련도')),
                ('importance', models.CharField(choices=[('OPTIONAL', '선택사항'), ('PREFERRED', '우대사항'), ('REQUIRED', '필수'), ('CRITICAL', '핵심')], max_length=20, verbose_name='중요도')),
                ('description', models.TextField(blank=True, verbose_name='설명')),
                ('weight', models.FloatField(default=1.0, verbose_name='가중치')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skill_requirements', to='ai_team_optimizer.project', verbose_name='프로젝트')),
            ],
            options={
                'verbose_name': '스킬 요구사항',
                'verbose_name_plural': '스킬 요구사항',
                'ordering': ['importance', 'skill_name'],
                'unique_together': {('project', 'skill_name')},
            },
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('LEAD', '팀 리더'), ('SENIOR', '시니어'), ('JUNIOR', '주니어'), ('SPECIALIST', '전문가'), ('CONSULTANT', '컨설턴트'), ('SUPPORT', '지원')], max_length=20, verbose_name='역할')),
                ('allocation_type', models.CharField(choices=[('FULL_TIME', '풀타임'), ('PART_TIME', '파트타임'), ('CONSULTANT', '컨설팅'), ('TEMPORARY', '임시')], default='FULL_TIME', max_length=20, verbose_name='배정 유형')),
                ('allocation_percentage', models.FloatField(default=100.0, verbose_name='배정 비율(%)')),
                ('responsibilities', models.JSONField(default=list, verbose_name='담당 업무')),
                ('expected_contribution', models.TextField(blank=True, verbose_name='기대 기여도')),
                ('key_skills_utilized', models.JSONField(default=list, verbose_name='활용 핵심 스킬')),
                ('daily_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='일당')),
                ('estimated_hours', models.IntegerField(default=0, verbose_name='예상 작업시간')),
                ('fit_score', models.FloatField(default=0.0, verbose_name='적합도 점수')),
                ('synergy_score', models.FloatField(default=0.0, verbose_name='시너지 점수')),
                ('availability_score', models.FloatField(default=0.0, verbose_name='가용성 점수')),
                ('added_at', models.DateTimeField(auto_now_add=True, verbose_name='추가일시')),
                ('is_confirmed', models.BooleanField(default=False, verbose_name='확정 여부')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employees.employee', verbose_name='직원')),
                ('team_composition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_members', to='ai_team_optimizer.teamcomposition', verbose_name='팀 구성')),
            ],
            options={
                'verbose_name': '팀 멤버',
                'verbose_name_plural': '팀 멤버',
                'ordering': ['role', '-fit_score'],
                'unique_together': {('team_composition', 'employee')},
            },
        ),
    ]
