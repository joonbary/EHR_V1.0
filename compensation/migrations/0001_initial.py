# Generated by Django 5.2.4 on 2025-08-06 06:53

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('employees', '0013_remove_employee_dummy_ssn'),
        ('evaluations', '0006_remove_growthlevel_consecutive_achievements_required_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='PositionAllowance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(choices=[('팀장', '팀장'), ('지점장', '지점장'), ('부서장', '부서장'), ('이사', '이사'), ('상무', '상무'), ('전무', '전무'), ('부사장', '부사장'), ('사장', '사장')], max_length=20, unique=True, verbose_name='직책')),
                ('allowance_amount', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='직책급 (원)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '직책급 테이블',
                'verbose_name_plural': '직책급 테이블',
                'ordering': ['allowance_amount'],
            },
        ),
        migrations.CreateModel(
            name='CompetencyPayTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('growth_level', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(6)], verbose_name='성장레벨')),
                ('job_type', models.CharField(choices=[('경영관리', '경영관리'), ('기업영업', '기업영업'), ('IT', 'IT'), ('리테일영업', '리테일영업')], max_length=20, verbose_name='직종')),
                ('competency_pay', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='역량급 (원)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '역량급 테이블',
                'verbose_name_plural': '역량급 테이블',
                'ordering': ['growth_level', 'job_type'],
                'unique_together': {('growth_level', 'job_type')},
            },
        ),
        migrations.CreateModel(
            name='PerformanceIncentiveRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('growth_level', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(6)], verbose_name='성장레벨')),
                ('evaluation_grade', models.CharField(choices=[('S', 'S등급'), ('A+', 'A+등급'), ('A', 'A등급'), ('B+', 'B+등급'), ('B', 'B등급'), ('C', 'C등급'), ('D', 'D등급')], max_length=5, verbose_name='평가등급')),
                ('incentive_rate', models.DecimalField(decimal_places=1, max_digits=5, verbose_name='지급률 (%)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '성과급 지급률',
                'verbose_name_plural': '성과급 지급률',
                'ordering': ['growth_level', '-incentive_rate'],
                'unique_together': {('growth_level', 'evaluation_grade')},
            },
        ),
        migrations.CreateModel(
            name='SalaryTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('growth_level', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(6)], verbose_name='성장레벨')),
                ('base_salary', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='기본급 (원)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '기본급 테이블',
                'verbose_name_plural': '기본급 테이블',
                'ordering': ['growth_level'],
                'unique_together': {('growth_level',)},
            },
        ),
        migrations.CreateModel(
            name='EmployeeCompensation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(verbose_name='연도')),
                ('month', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='월')),
                ('base_salary', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='기본급 (원)')),
                ('fixed_overtime', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='고정OT (원)')),
                ('competency_pay', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='역량급 (원)')),
                ('position_allowance', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True, verbose_name='직책급 (원)')),
                ('pi_amount', models.DecimalField(decimal_places=0, default=0, max_digits=10, verbose_name='성과급 (원)')),
                ('total_compensation', models.DecimalField(decimal_places=0, max_digits=12, verbose_name='총 보상 (원)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compensations', to='employees.employee', verbose_name='직원')),
                ('evaluation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='evaluations.comprehensiveevaluation', verbose_name='평가 정보')),
            ],
            options={
                'verbose_name': '직원 보상',
                'verbose_name_plural': '직원 보상',
                'ordering': ['-year', '-month', 'employee__name'],
                'unique_together': {('employee', 'year', 'month')},
            },
        ),
    ]
