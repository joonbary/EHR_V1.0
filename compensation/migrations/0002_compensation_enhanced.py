# Generated by Django 5.2 - Enhanced compensation system

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('compensation', '0001_initial'),
        ('employees', '0001_initial'),
    ]

    operations = [
        # 1. Create Grade Master
        migrations.CreateModel(
            name='GradeMaster',
            fields=[
                ('grade_code', models.CharField(max_length=10, primary_key=True, serialize=False, verbose_name='등급코드')),
                ('level', models.IntegerField(verbose_name='성장레벨')),
                ('step', models.IntegerField(verbose_name='급호')),
                ('title', models.CharField(max_length=50, verbose_name='직급명')),
                ('valid_from', models.DateField(verbose_name='유효시작일')),
                ('valid_to', models.DateField(blank=True, null=True, verbose_name='유효종료일')),
            ],
            options={
                'verbose_name': '등급 마스터',
                'verbose_name_plural': '등급 마스터',
                'db_table': 'comp_grade_master',
                'ordering': ['level', 'step'],
            },
        ),
        
        # 2. Create Position Master
        migrations.CreateModel(
            name='PositionMaster',
            fields=[
                ('position_code', models.CharField(max_length=10, primary_key=True, serialize=False, verbose_name='직책코드')),
                ('position_name', models.CharField(max_length=50, verbose_name='직책명')),
                ('domain', models.CharField(choices=[('HQ', '본사'), ('Non-PL', 'Non-PL'), ('PL', 'PL')], max_length=10, verbose_name='도메인')),
                ('manager_level', models.IntegerField(blank=True, null=True, verbose_name='관리자레벨')),
                ('valid_from', models.DateField(verbose_name='유효시작일')),
                ('valid_to', models.DateField(blank=True, null=True, verbose_name='유효종료일')),
            ],
            options={
                'verbose_name': '직책 마스터',
                'verbose_name_plural': '직책 마스터',
                'db_table': 'comp_position_master',
                'ordering': ['position_code'],
            },
        ),
        
        # 3. Create Job Profile Master
        migrations.CreateModel(
            name='JobProfileMaster',
            fields=[
                ('job_profile_id', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='직무프로파일ID')),
                ('job_family', models.CharField(max_length=50, verbose_name='직군')),
                ('job_series', models.CharField(max_length=50, verbose_name='직렬')),
                ('job_role', models.CharField(max_length=50, verbose_name='직무')),
                ('description', models.TextField(blank=True, verbose_name='설명')),
                ('valid_from', models.DateField(verbose_name='유효시작일')),
                ('valid_to', models.DateField(blank=True, null=True, verbose_name='유효종료일')),
            ],
            options={
                'verbose_name': '직무 프로파일',
                'verbose_name_plural': '직무 프로파일',
                'db_table': 'comp_job_profile_master',
                'ordering': ['job_profile_id'],
            },
        ),
        
        # 4. Create Base Salary Table
        migrations.CreateModel(
            name='BaseSalaryTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employment_type', models.CharField(choices=[('정규직', '정규직'), ('PL', 'PL'), ('Non-PL', 'Non-PL'), ('별정직', '별정직')], max_length=20, verbose_name='고용형태')),
                ('base_salary', models.DecimalField(decimal_places=0, max_digits=12, verbose_name='기본급')),
                ('valid_from', models.DateField(verbose_name='유효시작일')),
                ('valid_to', models.DateField(blank=True, null=True, verbose_name='유효종료일')),
                ('grade_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compensation.grademaster', verbose_name='등급코드')),
            ],
            options={
                'verbose_name': '기본급 테이블',
                'verbose_name_plural': '기본급 테이블',
                'db_table': 'comp_base_salary_table',
                'ordering': ['grade_code', 'employment_type'],
                'unique_together': {('grade_code', 'employment_type', 'valid_from')},
            },
        ),
        
        # 5. Create Position Allowance Table
        migrations.CreateModel(
            name='PositionAllowanceTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allowance_tier', models.CharField(choices=[('A', 'A등급'), ('B+', 'B+등급'), ('B', 'B등급'), ('N/A', '해당없음')], max_length=5, verbose_name='수당등급')),
                ('monthly_amount', models.DecimalField(decimal_places=0, max_digits=12, verbose_name='월지급액')),
                ('allowance_rate', models.DecimalField(choices=[(0.8, '초임(80%)'), (1.0, '일반(100%)')], decimal_places=1, default=1.0, max_digits=3, verbose_name='지급률')),
                ('valid_from', models.DateField(verbose_name='유효시작일')),
                ('valid_to', models.DateField(blank=True, null=True, verbose_name='유효종료일')),
                ('position_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compensation.positionmaster', verbose_name='직책코드')),
            ],
            options={
                'verbose_name': '직책급 테이블',
                'verbose_name_plural': '직책급 테이블',
                'db_table': 'comp_position_allowance',
                'ordering': ['position_code', 'allowance_tier'],
                'unique_together': {('position_code', 'allowance_tier', 'valid_from')},
            },
        ),
        
        # 6. Create Competency Allowance Table
        migrations.CreateModel(
            name='CompetencyAllowanceTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('competency_tier', models.CharField(choices=[('T1', 'Tier 1'), ('T2', 'Tier 2'), ('T3', 'Tier 3')], max_length=5, verbose_name='역량등급')),
                ('monthly_amount', models.DecimalField(decimal_places=0, max_digits=12, verbose_name='월지급액')),
                ('valid_from', models.DateField(verbose_name='유효시작일')),
                ('valid_to', models.DateField(blank=True, null=True, verbose_name='유효종료일')),
                ('job_profile_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compensation.jobprofilemaster', verbose_name='직무프로파일')),
            ],
            options={
                'verbose_name': '직무역량급 테이블',
                'verbose_name_plural': '직무역량급 테이블',
                'db_table': 'comp_competency_allowance',
                'ordering': ['job_profile_id', 'competency_tier'],
                'unique_together': {('job_profile_id', 'competency_tier', 'valid_from')},
            },
        ),
        
        # 7. Create PI Table
        migrations.CreateModel(
            name='PITable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_type', models.CharField(choices=[('본사', '본사'), ('영업', '영업')], max_length=10, verbose_name='조직구분')),
                ('role_type', models.CharField(choices=[('팀원', '팀원'), ('직책자', '직책자')], max_length=10, verbose_name='역할구분')),
                ('evaluation_grade', models.CharField(choices=[('S', 'S'), ('A+', 'A+'), ('A', 'A'), ('B+', 'B+'), ('B', 'B'), ('C', 'C'), ('D', 'D')], max_length=5, verbose_name='평가등급')),
                ('payment_rate', models.DecimalField(decimal_places=1, max_digits=5, verbose_name='지급률(%)')),
                ('valid_from', models.DateField(verbose_name='유효시작일')),
                ('valid_to', models.DateField(blank=True, null=True, verbose_name='유효종료일')),
            ],
            options={
                'verbose_name': 'PI 지급률',
                'verbose_name_plural': 'PI 지급률',
                'db_table': 'comp_pi_table',
                'ordering': ['organization_type', 'role_type', '-payment_rate'],
                'unique_together': {('organization_type', 'role_type', 'evaluation_grade', 'valid_from')},
            },
        ),
        
        # 8. Create Monthly PI Table
        migrations.CreateModel(
            name='MonthlyPITable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_level', models.CharField(choices=[('센터장', '센터장'), ('팀장', '팀장'), ('Lv.2-3', 'Lv.2-3(프로/책임/선임)'), ('Lv.1', 'Lv.1(전임/주임)')], max_length=20, verbose_name='역할레벨')),
                ('evaluation_grade', models.CharField(choices=[('S', 'S'), ('A+', 'A+'), ('A', 'A'), ('A-', 'A-'), ('B+', 'B+'), ('B', 'B'), ('B-', 'B-'), ('C', 'C'), ('D', 'D')], max_length=5, verbose_name='평가등급')),
                ('payment_amount', models.DecimalField(decimal_places=0, max_digits=12, verbose_name='지급액')),
                ('valid_from', models.DateField(verbose_name='유효시작일')),
                ('valid_to', models.DateField(blank=True, null=True, verbose_name='유효종료일')),
            ],
            options={
                'verbose_name': '월성과급',
                'verbose_name_plural': '월성과급',
                'db_table': 'comp_monthly_pi_table',
                'ordering': ['role_level', '-payment_amount'],
                'unique_together': {('role_level', 'evaluation_grade', 'valid_from')},
            },
        ),
        
        # 9. Create Compensation Snapshot
        migrations.CreateModel(
            name='CompensationSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pay_period', models.CharField(max_length=7, verbose_name='급여기간')),
                ('base_salary', models.DecimalField(decimal_places=0, max_digits=12, verbose_name='기본급')),
                ('fixed_ot', models.DecimalField(decimal_places=0, max_digits=12, verbose_name='고정OT')),
                ('position_allowance', models.DecimalField(decimal_places=0, default=0, max_digits=12, verbose_name='직책급')),
                ('competency_allowance', models.DecimalField(decimal_places=0, default=0, max_digits=12, verbose_name='직무역량급')),
                ('pi_amount', models.DecimalField(decimal_places=0, default=0, max_digits=12, verbose_name='PI')),
                ('monthly_pi_amount', models.DecimalField(decimal_places=0, default=0, max_digits=12, verbose_name='월성과급')),
                ('holiday_bonus', models.DecimalField(decimal_places=0, default=0, max_digits=12, verbose_name='추석상여')),
                ('calc_run_id', models.CharField(max_length=50, verbose_name='계산ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employees.employee', verbose_name='직원')),
            ],
            options={
                'verbose_name': '보상 스냅샷',
                'verbose_name_plural': '보상 스냅샷',
                'db_table': 'comp_snapshot',
                'ordering': ['-pay_period', 'employee'],
                'unique_together': {('employee', 'pay_period')},
            },
        ),
        
        # 10. Create Calculation Run Log
        migrations.CreateModel(
            name='CalcRunLog',
            fields=[
                ('run_id', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='실행ID')),
                ('run_type', models.CharField(max_length=20, verbose_name='실행유형')),
                ('pay_period', models.CharField(max_length=7, verbose_name='급여기간')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='실행일시')),
                ('formula_version', models.CharField(max_length=20, verbose_name='산식버전')),
                ('affected_count', models.IntegerField(default=0, verbose_name='처리건수')),
                ('changes', models.JSONField(default=dict, verbose_name='변경내역')),
                ('errors', models.JSONField(default=list, verbose_name='오류내역')),
                ('status', models.CharField(default='running', max_length=20, verbose_name='상태')),
            ],
            options={
                'verbose_name': '계산 실행 로그',
                'verbose_name_plural': '계산 실행 로그',
                'db_table': 'comp_calc_run_log',
                'ordering': ['-timestamp'],
            },
        ),
        
        # 11. Create Employee Compensation Profile
        migrations.CreateModel(
            name='EmployeeCompensationProfile',
            fields=[
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='employees.employee', verbose_name='직원')),
                ('competency_tier', models.CharField(max_length=5, verbose_name='역량등급')),
                ('position_tier', models.CharField(blank=True, max_length=5, null=True, verbose_name='직책등급')),
                ('position_start_date', models.DateField(blank=True, null=True, verbose_name='직책시작일')),
                ('is_initial_position', models.BooleanField(default=False, verbose_name='초임여부')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일시')),
                ('grade_code', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='compensation.grademaster', verbose_name='등급')),
                ('job_profile_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='compensation.jobprofilemaster', verbose_name='직무프로파일')),
                ('position_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='compensation.positionmaster', verbose_name='직책')),
            ],
            options={
                'verbose_name': '직원 보상 프로파일',
                'verbose_name_plural': '직원 보상 프로파일',
                'db_table': 'comp_employee_profile',
                'ordering': ['employee'],
            },
        ),
    ]