# Generated by Django 5.2.4 on 2025-07-29 01:12

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('employees', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='권한명')),
                ('codename', models.CharField(help_text='프로그래밍에서 사용하는 고유 코드', max_length=100, unique=True, verbose_name='권한 코드')),
                ('description', models.TextField(blank=True, verbose_name='설명')),
                ('permission_type', models.CharField(choices=[('CREATE', '생성'), ('READ', '조회'), ('UPDATE', '수정'), ('DELETE', '삭제'), ('APPROVE', '승인'), ('MANAGE', '관리'), ('EXECUTE', '실행'), ('ADMIN', '관리자')], max_length=20, verbose_name='권한 유형')),
                ('resource_type', models.CharField(choices=[('EMPLOYEE', '직원 정보'), ('DEPARTMENT', '부서 정보'), ('EVALUATION', '평가'), ('COMPENSATION', '보상'), ('TRAINING', '교육'), ('RECRUITMENT', '채용'), ('ANNOUNCEMENT', '공지사항'), ('REPORT', '보고서'), ('SYSTEM', '시스템'), ('ALL', '전체')], max_length=20, verbose_name='리소스 유형')),
                ('level', models.IntegerField(default=1, help_text='1: 일반, 5: 관리자, 10: 시스템', verbose_name='권한 레벨')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성화')),
                ('is_system', models.BooleanField(default=False, help_text='시스템에서 관리하는 권한 (수정 불가)', verbose_name='시스템 권한')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '권한',
                'verbose_name_plural': '권한 관리',
                'ordering': ['resource_type', 'permission_type', 'level'],
                'unique_together': {('permission_type', 'resource_type')},
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='역할명')),
                ('description', models.TextField(blank=True, verbose_name='설명')),
                ('role_type', models.CharField(choices=[('SYSTEM', '시스템 역할'), ('DEPARTMENT', '부서 역할'), ('PROJECT', '프로젝트 역할'), ('CUSTOM', '사용자 정의')], default='CUSTOM', max_length=20, verbose_name='역할 유형')),
                ('level', models.IntegerField(default=1, verbose_name='역할 레벨')),
                ('inherit_permissions', models.BooleanField(default=True, help_text='상위 역할의 권한을 상속받을지 여부', verbose_name='권한 상속')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성화')),
                ('is_system', models.BooleanField(default=False, help_text='시스템에서 관리하는 역할 (수정 불가)', verbose_name='시스템 역할')),
                ('max_assignees', models.IntegerField(blank=True, help_text='0이면 무제한', null=True, verbose_name='최대 할당 인원')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_roles', to='employees.employee', verbose_name='생성자')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='access_control.role', verbose_name='상위 역할')),
            ],
            options={
                'verbose_name': '역할',
                'verbose_name_plural': '역할 관리',
                'ordering': ['level', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SecurityPolicy',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='정책명')),
                ('description', models.TextField(verbose_name='설명')),
                ('policy_type', models.CharField(choices=[('PASSWORD', '패스워드 정책'), ('SESSION', '세션 정책'), ('ACCESS', '접근 정책'), ('DATA', '데이터 정책'), ('AUDIT', '감사 정책')], max_length=20, verbose_name='정책 유형')),
                ('settings', models.JSONField(default=dict, help_text='정책별 상세 설정 (JSON)', verbose_name='정책 설정')),
                ('applies_to_all', models.BooleanField(default=True, verbose_name='전체 적용')),
                ('target_departments', models.CharField(blank=True, help_text='부서 코드 (쉼표로 구분)', max_length=500, verbose_name='대상 부서')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성화')),
                ('is_enforced', models.BooleanField(default=True, help_text='정책 위반시 접근 차단', verbose_name='강제 적용')),
                ('effective_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='시행일')),
                ('expiry_date', models.DateTimeField(blank=True, null=True, verbose_name='만료일')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='employees.employee', verbose_name='생성자')),
                ('target_roles', models.ManyToManyField(blank=True, to='access_control.role', verbose_name='대상 역할')),
            ],
            options={
                'verbose_name': '보안 정책',
                'verbose_name_plural': '보안 정책 관리',
                'ordering': ['policy_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='AuditTrail',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('audit_type', models.CharField(choices=[('ROLE_CHANGE', '역할 변경'), ('PERMISSION_CHANGE', '권한 변경'), ('POLICY_CHANGE', '정책 변경'), ('USER_ACCESS', '사용자 접근'), ('DATA_EXPORT', '데이터 내보내기'), ('SYSTEM_CONFIG', '시스템 설정'), ('SECURITY_INCIDENT', '보안 사고')], max_length=20, verbose_name='감사 유형')),
                ('action', models.CharField(max_length=100, verbose_name='액션')),
                ('description', models.TextField(verbose_name='설명')),
                ('old_value', models.JSONField(blank=True, null=True, verbose_name='이전 값')),
                ('new_value', models.JSONField(blank=True, null=True, verbose_name='새 값')),
                ('object_id', models.CharField(blank=True, max_length=100)),
                ('risk_level', models.CharField(choices=[('LOW', '낮음'), ('MEDIUM', '보통'), ('HIGH', '높음'), ('CRITICAL', '매우 높음')], default='LOW', max_length=10, verbose_name='위험도')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP 주소')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('target_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='target_audit_trails', to='employees.employee', verbose_name='대상 사용자')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_trails', to='employees.employee', verbose_name='실행자')),
            ],
            options={
                'verbose_name': '감사 추적',
                'verbose_name_plural': '감사 추적 관리',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['audit_type', 'created_at'], name='access_cont_audit_t_cf48a9_idx'), models.Index(fields=['user', 'created_at'], name='access_cont_user_id_993e0d_idx'), models.Index(fields=['risk_level', 'created_at'], name='access_cont_risk_le_bc82a7_idx')],
            },
        ),
        migrations.CreateModel(
            name='AccessLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(choices=[('LOGIN', '로그인'), ('LOGOUT', '로그아웃'), ('VIEW', '조회'), ('CREATE', '생성'), ('UPDATE', '수정'), ('DELETE', '삭제'), ('APPROVE', '승인'), ('DOWNLOAD', '다운로드'), ('EXPORT', '내보내기'), ('DENIED', '접근 거부')], max_length=20, verbose_name='액션')),
                ('resource_type', models.CharField(max_length=50, verbose_name='리소스 유형')),
                ('resource_id', models.CharField(blank=True, max_length=100, verbose_name='리소스 ID')),
                ('object_id', models.CharField(blank=True, max_length=100)),
                ('is_successful', models.BooleanField(default=True, verbose_name='성공 여부')),
                ('error_message', models.TextField(blank=True, verbose_name='오류 메시지')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP 주소')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('request_path', models.CharField(blank=True, max_length=500, verbose_name='요청 경로')),
                ('request_method', models.CharField(blank=True, max_length=10, verbose_name='요청 메서드')),
                ('session_key', models.CharField(blank=True, max_length=40, verbose_name='세션 키')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access_logs', to='employees.employee', verbose_name='사용자')),
                ('used_permission', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='access_control.permission', verbose_name='사용된 권한')),
                ('used_role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='access_control.role', verbose_name='사용된 역할')),
            ],
            options={
                'verbose_name': '접근 로그',
                'verbose_name_plural': '접근 로그 관리',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'created_at'], name='access_cont_user_id_8d2d64_idx'), models.Index(fields=['action', 'created_at'], name='access_cont_action_164670_idx'), models.Index(fields=['resource_type', 'created_at'], name='access_cont_resourc_73f106_idx'), models.Index(fields=['is_successful', 'created_at'], name='access_cont_is_succ_d6eb22_idx')],
            },
        ),
        migrations.CreateModel(
            name='RolePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_granted', models.BooleanField(default=True, verbose_name='권한 부여')),
                ('is_denied', models.BooleanField(default=False, verbose_name='권한 거부')),
                ('conditions', models.JSONField(blank=True, default=dict, help_text='권한 적용 조건 (JSON)', verbose_name='조건')),
                ('granted_at', models.DateTimeField(auto_now_add=True, verbose_name='부여일')),
                ('granted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='employees.employee', verbose_name='부여자')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role_permissions', to='access_control.permission', verbose_name='권한')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role_permissions', to='access_control.role', verbose_name='역할')),
            ],
            options={
                'verbose_name': '역할 권한',
                'verbose_name_plural': '역할 권한 관리',
                'unique_together': {('role', 'permission')},
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('scope_type', models.CharField(choices=[('GLOBAL', '전체'), ('DEPARTMENT', '부서'), ('PROJECT', '프로젝트'), ('CUSTOM', '사용자 정의')], default='GLOBAL', max_length=20, verbose_name='적용 범위')),
                ('scope_value', models.CharField(blank=True, help_text='부서 코드, 프로젝트 ID 등', max_length=100, verbose_name='범위 값')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='시작일')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='종료일')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성화')),
                ('is_primary', models.BooleanField(default=False, help_text='사용자의 주요 역할', verbose_name='기본 역할')),
                ('assigned_reason', models.TextField(blank=True, verbose_name='할당 사유')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_roles', to='employees.employee', verbose_name='할당자')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_roles', to='access_control.role', verbose_name='역할')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_roles', to='employees.employee', verbose_name='사용자')),
            ],
            options={
                'verbose_name': '사용자 역할',
                'verbose_name_plural': '사용자 역할 관리',
                'ordering': ['-is_primary', '-start_date'],
                'unique_together': {('user', 'role', 'scope_type', 'scope_value')},
            },
        ),
    ]
