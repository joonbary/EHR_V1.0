# Generated by Django 5.2.4 on 2025-08-25 00:16

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('airiss', '0001_initial'),
        ('employees', '0004_employee_initial_position'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TalentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='카테고리명')),
                ('category_code', models.CharField(choices=[('CORE_TALENT', '핵심인재'), ('HIGH_POTENTIAL', '고잠재인력'), ('PROMOTION_CANDIDATE', '승진후보자'), ('NEEDS_ATTENTION', '관리필요인력'), ('RETENTION_RISK', '이직위험군'), ('STAR_PERFORMER', '우수성과자'), ('FUTURE_LEADER', '미래리더'), ('SPECIALIST', '전문가그룹')], max_length=50, unique=True, verbose_name='카테고리 코드')),
                ('description', models.TextField(verbose_name='설명')),
                ('criteria', models.JSONField(default=dict, help_text='AI 분석 기준 및 임계값', verbose_name='선정 기준')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성화 여부')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
            ],
            options={
                'verbose_name': '인재 카테고리',
                'verbose_name_plural': '인재 카테고리',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TalentPool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ai_score', models.FloatField(help_text='AIRISS 분석 점수 (0-100)', verbose_name='AI 평가 점수')),
                ('confidence_level', models.FloatField(help_text='AI 분석 신뢰도 (0-1)', verbose_name='신뢰도')),
                ('status', models.CharField(choices=[('ACTIVE', '활성'), ('MONITORING', '모니터링'), ('PENDING', '검토중'), ('EXCLUDED', '제외')], default='PENDING', max_length=20, verbose_name='상태')),
                ('review_date', models.DateField(blank=True, null=True, verbose_name='검토일')),
                ('valid_until', models.DateField(blank=True, null=True, verbose_name='유효기간')),
                ('strengths', models.JSONField(default=list, help_text='AIRISS 분석 강점', verbose_name='강점')),
                ('development_areas', models.JSONField(default=list, help_text='AIRISS 분석 개발필요영역', verbose_name='개발영역')),
                ('recommendations', models.JSONField(default=list, help_text='AIRISS 추천사항', verbose_name='추천사항')),
                ('notes', models.TextField(blank=True, verbose_name='비고')),
                ('added_at', models.DateTimeField(auto_now_add=True, verbose_name='추가일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='talent_pool_additions', to=settings.AUTH_USER_MODEL, verbose_name='추가자')),
                ('ai_analysis_result', models.ForeignKey(blank=True, help_text='AIRISS 분석 결과와 연동', null=True, on_delete=django.db.models.deletion.SET_NULL, to='airiss.aianalysisresult', verbose_name='AI 분석 결과')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employees.talentcategory', verbose_name='인재 카테고리')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employees.employee', verbose_name='직원')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='talent_pool_updates', to=settings.AUTH_USER_MODEL, verbose_name='수정자')),
            ],
            options={
                'verbose_name': '인재풀',
                'verbose_name_plural': '인재풀',
                'ordering': ['-ai_score', '-added_at'],
            },
        ),
        migrations.CreateModel(
            name='TalentDevelopment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('development_goal', models.CharField(max_length=200, verbose_name='개발 목표')),
                ('current_state', models.TextField(verbose_name='현재 상태')),
                ('target_state', models.TextField(verbose_name='목표 상태')),
                ('activities', models.JSONField(default=list, verbose_name='개발 활동')),
                ('timeline', models.JSONField(default=dict, verbose_name='일정')),
                ('resources_needed', models.JSONField(default=list, verbose_name='필요 자원')),
                ('progress_percentage', models.IntegerField(default=0, verbose_name='진행률')),
                ('milestones', models.JSONField(default=list, verbose_name='마일스톤')),
                ('completed_activities', models.JSONField(default=list, verbose_name='완료된 활동')),
                ('priority', models.CharField(choices=[('URGENT', '긴급'), ('HIGH', '높음'), ('MEDIUM', '중간'), ('LOW', '낮음')], default='MEDIUM', max_length=20, verbose_name='우선순위')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성 상태')),
                ('start_date', models.DateField(verbose_name='시작일')),
                ('end_date', models.DateField(verbose_name='종료일')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='development_plans_created', to=settings.AUTH_USER_MODEL, verbose_name='생성자')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employees.employee', verbose_name='직원')),
                ('talent_pool', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employees.talentpool', verbose_name='인재풀 연결')),
            ],
            options={
                'verbose_name': '인재 개발 계획',
                'verbose_name_plural': '인재 개발 계획',
                'ordering': ['-priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RetentionRisk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('risk_level', models.CharField(choices=[('CRITICAL', '매우높음'), ('HIGH', '높음'), ('MEDIUM', '중간'), ('LOW', '낮음')], max_length=20, verbose_name='위험 수준')),
                ('risk_score', models.FloatField(help_text='AIRISS 이직 위험도 점수 (0-100)', verbose_name='위험 점수')),
                ('risk_factors', models.JSONField(default=list, verbose_name='위험 요인')),
                ('retention_strategy', models.TextField(verbose_name='유지 전략')),
                ('action_items', models.JSONField(default=list, verbose_name='조치 항목')),
                ('action_status', models.CharField(choices=[('PENDING', '대기중'), ('IN_PROGRESS', '진행중'), ('COMPLETED', '완료'), ('FAILED', '실패')], default='PENDING', max_length=20, verbose_name='조치 상태')),
                ('intervention_date', models.DateField(blank=True, null=True, verbose_name='개입일')),
                ('outcome', models.TextField(blank=True, verbose_name='결과')),
                ('is_retained', models.BooleanField(blank=True, null=True, verbose_name='유지 여부')),
                ('identified_date', models.DateTimeField(auto_now_add=True, verbose_name='식별일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('assigned_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='담당자')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employees.employee', verbose_name='직원')),
                ('talent_pool', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employees.talentpool', verbose_name='인재풀 연결')),
            ],
            options={
                'verbose_name': '이직 위험',
                'verbose_name_plural': '이직 위험',
                'ordering': ['-risk_score', '-identified_date'],
            },
        ),
        migrations.CreateModel(
            name='PromotionCandidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_position', models.CharField(max_length=50, verbose_name='현재 직급')),
                ('target_position', models.CharField(max_length=50, verbose_name='목표 직급')),
                ('readiness_level', models.CharField(choices=[('READY', '준비됨'), ('NEAR_READY', '곧 준비됨'), ('DEVELOPING', '개발중'), ('NOT_READY', '준비안됨')], max_length=20, verbose_name='준비도')),
                ('expected_promotion_date', models.DateField(blank=True, null=True, verbose_name='예상 승진일')),
                ('performance_score', models.FloatField(verbose_name='성과 점수')),
                ('potential_score', models.FloatField(verbose_name='잠재력 점수')),
                ('ai_recommendation_score', models.FloatField(help_text='AIRISS 승진 가능성 점수', verbose_name='AI 추천 점수')),
                ('development_plan', models.JSONField(default=dict, verbose_name='개발 계획')),
                ('completed_requirements', models.JSONField(default=list, verbose_name='완료된 요구사항')),
                ('pending_requirements', models.JSONField(default=list, verbose_name='대기중인 요구사항')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성 상태')),
                ('review_notes', models.TextField(blank=True, verbose_name='검토 노트')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('reviewed_at', models.DateTimeField(blank=True, null=True, verbose_name='검토일')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employees.employee', verbose_name='직원')),
                ('reviewed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='검토자')),
                ('talent_pool', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employees.talentpool', verbose_name='인재풀 연결')),
            ],
            options={
                'verbose_name': '승진 후보자',
                'verbose_name_plural': '승진 후보자',
                'ordering': ['-ai_recommendation_score', '-performance_score'],
            },
        ),
        migrations.AddIndex(
            model_name='talentpool',
            index=models.Index(fields=['category', 'status'], name='employees_t_categor_624fe4_idx'),
        ),
        migrations.AddIndex(
            model_name='talentpool',
            index=models.Index(fields=['ai_score'], name='employees_t_ai_scor_8d42aa_idx'),
        ),
        migrations.AddIndex(
            model_name='talentpool',
            index=models.Index(fields=['valid_until'], name='employees_t_valid_u_6028ec_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='talentpool',
            unique_together={('employee', 'category')},
        ),
        migrations.AddIndex(
            model_name='retentionrisk',
            index=models.Index(fields=['risk_level', 'action_status'], name='employees_r_risk_le_49642b_idx'),
        ),
        migrations.AddIndex(
            model_name='retentionrisk',
            index=models.Index(fields=['risk_score'], name='employees_r_risk_sc_a05d9f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='promotioncandidate',
            unique_together={('employee', 'target_position')},
        ),
    ]
