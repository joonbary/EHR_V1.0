보상관리 시스템 메뉴 구성 제안서
🎯 핵심 설계 원칙

투명성: 보상 기준과 산정 로직의 명확한 공개
공정성: 객관적 지표 기반 보상 차등화
유연성: 다양한 보상 요소의 조합 가능
효율성: 대량 데이터 처리 및 시뮬레이션 지원

📊 메뉴 구조 (Best Practice 기반)
1. 대시보드
📈 보상관리 대시보드
├── 전사 인건비 현황
├── 부서별 인건비 분포
├── 직급별 평균 보상 차트
└── 보상 경쟁력 지표 (시장 대비)
2. 개인별 보상관리
👤 개인별 보상관리
├── 직원 검색/조회
├── 개인 보상 이력
│   ├── 연봉 변동 추이
│   ├── 성과급 지급 내역
│   └── 복리후생 수혜 현황
├── 보상 패키지 구성
│   ├── 기본급
│   ├── 직책급
│   ├── 직무역량급
│   ├── 성과급(PI)
│   └── 기타 수당
└── 보상 조정
    ├── 연봉 협상 관리
    ├── 승진/승급 시뮬레이션
    └── 특별 보상 신청/승인
3. 성과보상(PI) 관리
🎯 성과보상(PI) 관리
├── PI 정책 설정
│   ├── 평가등급별 지급률
│   ├── 부서별 PI Pool 배분
│   └── 개인/조직 성과 반영 비율
├── PI 산정
│   ├── 대상자 선정
│   ├── 개인별 PI 계산
│   └── 시뮬레이션/What-if 분석
├── PI 집행
│   ├── 지급 승인 워크플로우
│   ├── 지급 현황 모니터링
│   └── 이의신청 관리
└── PI 분석
    ├── 부서별 지급 현황
    ├── 성과-보상 상관관계
    └── ROI 분석
4. 보상 테이블 관리
📋 보상 테이블 관리
├── 기본급 테이블
│   ├── 직군별 설정
│   ├── 직급별 Band 관리
│   └── 연차별 증가율
├── 직책급 테이블
│   ├── 직책별 수당 기준
│   └── 겸직 시 계산 로직
├── 직무역량급 테이블
│   ├── 직무 난이도 등급
│   ├── 전문자격 가산점
│   └── 역량평가 연동
├── 수당 관리
│   ├── 법정수당 설정
│   ├── 복리후생 항목
│   └── 특별수당 기준
└── 시장 벤치마킹
    ├── 업계 평균 비교
    ├── 경쟁사 분석
    └── 보상 경쟁력 지수
5. 인건비 분석
💰 인건비 분석
├── 예산 대비 실적
│   ├── 월별/분기별/연별
│   ├── 부서별/직급별
│   └── 항목별 상세
├── 인건비 예측
│   ├── 승진/승급 영향도
│   ├── 인력 증감 시뮬레이션
│   └── 보상 정책 변경 효과
├── 비용 효율성
│   ├── 인당 생산성
│   ├── 매출 대비 인건비율
│   └── 부가가치 분석
└── 리포트
    ├── 경영진 보고서
    ├── 감사 자료
    └── 대외 공시 자료
6. 보상 정책
📜 보상 정책 관리
├── 정책 문서
│   ├── 보상 철학/원칙
│   ├── 직급별 가이드라인
│   └── 특별 보상 규정
├── 승인 권한
│   ├── 금액별 결재선
│   ├── 예외 처리 프로세스
│   └── 위임전결 규정
└── 컴플라이언스
    ├── 법규 준수 체크
    ├── 내부 감사 대응
    └── 보상 형평성 모니터링
🔧 핵심 기능 구현 우선순위
Phase 1 (1-2개월)

개인별 연봉 CRUD

기본 정보 입력/수정
보상 이력 조회
간단한 리포트


기본 보상 테이블

직급별 기본급 설정
엑셀 업로드/다운로드



Phase 2 (3-4개월)

PI 관리 시스템

PI 정책 설정
자동 계산 엔진
승인 워크플로우


인건비 분석 대시보드

실시간 집계
기본 차트/그래프



Phase 3 (5-6개월)

고급 분석 기능

What-if 시뮬레이션
예측 모델링
벤치마킹 도구


통합 리포팅

맞춤형 보고서
자동 알림/경고



💡 차별화 포인트
1. AI 기반 보상 추천
python# 유사 직무/경력 기반 적정 보상 추천
# 이상 징후 감지 (과도한 인상/삭감)
# 형평성 자동 체크
2. 실시간 시뮬레이션
python# 드래그앤드롭 보상 조정
# 즉시 예산 영향도 확인
# 다차원 시나리오 비교
3. 투명성 대시보드
python# 직원용: 내 보상 위치/성장 경로
# 관리자용: 팀 보상 현황/조정 권한
# 경영진용: 전사 보상 전략 모니터링
🚀 Claude Code 작업 지시서 예시
# 슈퍼클로드 플래그 및 페르소나 활성화
--super-claude --persona=hr-specialist --mode=full-stack

# 작업 지시: 개인별 연봉 CRUD 화면 구현

## 목표
OK금융그룹 표준에 맞는 개인별 연봉 관리 화면 구현

## 요구사항
1. FastAPI 백엔드 (/api/compensation/salary)
2. 직원 검색 (사번/이름/부서)
3. 연봉 정보 CRUD
   - 기본급, 직책급, 직무역량급 분리
   - 변경 이력 자동 저장
   - 승인 워크플로우 (팀장→HR→임원)
4. 보안
   - 본인/상위 관리자만 조회 가능
   - 민감정보 암호화
5. UI/UX
   - 반응형 디자인
   - 실시간 validation
   - 엑셀 import/export

## 기술 스택
- Backend: FastAPI + PostgreSQL
- Frontend: Vue.js 3 + Vuetify
- 인증: JWT + Role-based access
- MCP: shrimp task manager (승인 프로세스)

## 테이블 스키마
CREATE TABLE employee_salary (
    id SERIAL PRIMARY KEY,
    employee_id VARCHAR(20) NOT NULL,
    effective_date DATE NOT NULL,
    base_salary DECIMAL(12,2),
    position_allowance DECIMAL(12,2),
    skill_allowance DECIMAL(12,2),
    total_salary DECIMAL(12,2),
    status VARCHAR(20), -- draft/pending/approved
    created_by VARCHAR(20),
    approved_by VARCHAR(20),
    created_at TIMESTAMP DEFAULT NOW(),
    UNIQUE(employee_id, effective_date)
);

## 구현 순서
1. DB 스키마 생성
2. FastAPI CRUD endpoints
3. 인증/권한 미들웨어
4. Vue.js 컴포넌트
5. 엑셀 업로드 기능
6. 승인 워크플로우
7. 변경 이력 조회

## 예외 처리
- 중복 데이터 방지
- 날짜 유효성 검증
- 권한 없는 접근 차단
- 동시 수정 방지 (optimistic locking)