# Generated by Django 5.2.4 on 2025-07-30 04:41

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('employees', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='EvaluationPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(verbose_name='연도')),
                ('period_type', models.CharField(choices=[('Q1', '1분기'), ('Q2', '2분기'), ('Q3', '3분기'), ('Q4', '4분기'), ('HALF1', '상반기'), ('HALF2', '하반기'), ('ANNUAL', '연간')], max_length=10, verbose_name='평가기간 타입')),
                ('start_date', models.DateField(verbose_name='시작일')),
                ('end_date', models.DateField(verbose_name='종료일')),
                ('is_active', models.BooleanField(default=False, verbose_name='활성화')),
                ('status', models.CharField(choices=[('PLANNING', '계획중'), ('ONGOING', '진행중'), ('COMPLETED', '완료')], default='PLANNING', max_length=20, verbose_name='상태')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '평가기간',
                'verbose_name_plural': '평가기간',
                'ordering': ['-year', 'period_type'],
                'unique_together': {('year', 'period_type')},
            },
        ),
        migrations.CreateModel(
            name='ContributionEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_achievement_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='종합달성률(%)')),
                ('contribution_score', models.DecimalField(decimal_places=1, max_digits=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='기여도 점수')),
                ('is_achieved', models.BooleanField(default=False, verbose_name='달성여부')),
                ('evaluated_date', models.DateField(blank=True, null=True, verbose_name='평가일')),
                ('comments', models.TextField(blank=True, verbose_name='평가의견')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contribution_evaluations', to='employees.employee', verbose_name='직원')),
                ('evaluator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contribution_evaluations_given', to='employees.employee', verbose_name='평가자')),
                ('evaluation_period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='evaluations.evaluationperiod', verbose_name='평가기간')),
            ],
            options={
                'verbose_name': '기여도 평가',
                'verbose_name_plural': '기여도 평가',
                'unique_together': {('employee', 'evaluation_period')},
            },
        ),
        migrations.CreateModel(
            name='CalibrationSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_name', models.CharField(max_length=200, verbose_name='세션명')),
                ('session_date', models.DateField(verbose_name='세션 날짜')),
                ('department', models.CharField(blank=True, choices=[('IT', 'IT'), ('HR', '인사'), ('FINANCE', '재무'), ('MARKETING', '마케팅'), ('SALES', '영업'), ('OPERATIONS', '운영')], max_length=20, null=True, verbose_name='대상 부서')),
                ('agenda', models.TextField(blank=True, verbose_name='안건')),
                ('minutes', models.TextField(blank=True, verbose_name='회의록')),
                ('status', models.CharField(choices=[('SCHEDULED', '예정'), ('IN_PROGRESS', '진행중'), ('COMPLETED', '완료'), ('CANCELLED', '취소')], default='SCHEDULED', max_length=20, verbose_name='상태')),
                ('s_grade_ratio', models.DecimalField(decimal_places=2, default=10.0, max_digits=5, verbose_name='S등급 비율(%)')),
                ('a_grade_ratio', models.DecimalField(decimal_places=2, default=30.0, max_digits=5, verbose_name='A등급 비율(%)')),
                ('b_grade_ratio', models.DecimalField(decimal_places=2, default=50.0, max_digits=5, verbose_name='B등급 비율(%)')),
                ('c_grade_ratio', models.DecimalField(decimal_places=2, default=10.0, max_digits=5, verbose_name='C등급 비율(%)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('facilitator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='calibration_sessions_facilitated', to='employees.employee', verbose_name='진행자')),
                ('participants', models.ManyToManyField(related_name='calibration_sessions_participated', to='employees.employee', verbose_name='참여자')),
                ('evaluation_period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='evaluations.evaluationperiod', verbose_name='평가기간')),
            ],
            options={
                'verbose_name': 'Calibration Session',
                'verbose_name_plural': 'Calibration Sessions',
                'ordering': ['-session_date'],
            },
        ),
        migrations.CreateModel(
            name='ExpertiseEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('required_level', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(6)], verbose_name='요구 레벨')),
                ('expertise_focus', models.CharField(choices=[('hard_skill', 'Hard Skill Focused'), ('balanced', 'Balanced')], default='balanced', max_length=20, verbose_name='전문성 초점')),
                ('creative_solution', models.IntegerField(default=2, help_text='1: 이해, 2: 적용, 3: 자문, 4: 창의', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='창의적 해결방안 제시')),
                ('technical_innovation', models.IntegerField(default=2, help_text='1: 이해, 2: 적용, 3: 자문, 4: 창의', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='기술적 혁신')),
                ('process_improvement', models.IntegerField(default=2, help_text='1: 이해, 2: 적용, 3: 자문, 4: 창의', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='프로세스 개선')),
                ('knowledge_sharing', models.IntegerField(default=2, help_text='1: 이해, 2: 적용, 3: 자문, 4: 창의', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='지식 공유')),
                ('mentoring', models.IntegerField(default=2, help_text='1: 이해, 2: 적용, 3: 자문, 4: 창의', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='멘토링')),
                ('cross_functional', models.IntegerField(default=2, help_text='1: 이해, 2: 적용, 3: 자문, 4: 창의', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='크로스펑셔널 협업')),
                ('strategic_thinking', models.IntegerField(default=2, help_text='1: 이해, 2: 적용, 3: 자문, 4: 창의', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='전략적 사고')),
                ('business_acumen', models.IntegerField(default=2, help_text='1: 이해, 2: 적용, 3: 자문, 4: 창의', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='비즈니스 감각')),
                ('industry_trend', models.IntegerField(default=2, help_text='1: 이해, 2: 적용, 3: 자문, 4: 창의', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='산업 트렌드 파악')),
                ('continuous_learning', models.IntegerField(default=2, help_text='1: 이해, 2: 적용, 3: 자문, 4: 창의', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='지속적 학습')),
                ('strategic_contribution', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='전략적 기여')),
                ('interactive_contribution', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='상호작용 기여')),
                ('technical_expertise', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='기술 전문성')),
                ('business_understanding', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='비즈니스 이해')),
                ('total_score', models.DecimalField(decimal_places=1, max_digits=3, verbose_name='종합점수')),
                ('is_achieved', models.BooleanField(default=False, verbose_name='달성여부')),
                ('evaluated_date', models.DateField(blank=True, null=True, verbose_name='평가일')),
                ('comments', models.TextField(blank=True, verbose_name='평가의견')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expertise_evaluations', to='employees.employee', verbose_name='직원')),
                ('evaluation_period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='evaluations.evaluationperiod', verbose_name='평가기간')),
                ('evaluator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='expertise_evaluations_given', to='employees.employee', verbose_name='평가자')),
            ],
            options={
                'verbose_name': '전문성 평가',
                'verbose_name_plural': '전문성 평가',
                'unique_together': {('employee', 'evaluation_period')},
            },
        ),
        migrations.CreateModel(
            name='ImpactEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('impact_scope', models.CharField(choices=[('market', '조직외'), ('corp', '조직간'), ('org', '조직내'), ('individual', '개인간')], default='org', max_length=20, verbose_name='영향력 범위')),
                ('core_values_practice', models.CharField(choices=[('exemplary_values', '핵심가치 모범 실천'), ('limited_values', '핵심가치 제한적 실천')], default='limited_values', max_length=20, verbose_name='핵심가치 실천')),
                ('leadership_demonstration', models.CharField(choices=[('exemplary_leadership', '리더십 모범 발휘'), ('limited_leadership', '리더십 제한적 발휘')], default='limited_leadership', max_length=20, verbose_name='리더십 발휘')),
                ('customer_focus', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='고객중심')),
                ('collaboration', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='협업')),
                ('innovation', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='혁신')),
                ('team_leadership', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='팀 리더십')),
                ('organizational_impact', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='조직 영향력')),
                ('external_networking', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='대외 네트워킹')),
                ('total_score', models.DecimalField(decimal_places=1, max_digits=3, verbose_name='종합점수')),
                ('is_achieved', models.BooleanField(default=False, verbose_name='달성여부')),
                ('evaluated_date', models.DateField(blank=True, null=True, verbose_name='평가일')),
                ('comments', models.TextField(blank=True, verbose_name='평가의견')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='impact_evaluations', to='employees.employee', verbose_name='직원')),
                ('evaluation_period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='evaluations.evaluationperiod', verbose_name='평가기간')),
                ('evaluator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='impact_evaluations_given', to='employees.employee', verbose_name='평가자')),
            ],
            options={
                'verbose_name': '영향력 평가',
                'verbose_name_plural': '영향력 평가',
                'unique_together': {('employee', 'evaluation_period')},
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='과제명')),
                ('description', models.TextField(blank=True, verbose_name='과제설명')),
                ('contribution_type', models.CharField(choices=[('strategic', '전략과제'), ('improvement', '개선과제'), ('operation', '운영과제'), ('project', '프로젝트')], default='operation', max_length=20, verbose_name='과제유형')),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='비중(%)')),
                ('contribution_method', models.CharField(choices=[('directing', '총괄'), ('leading', '리딩'), ('individual', '실무'), ('support', '지원')], default='leading', max_length=20, verbose_name='기여방식')),
                ('contribution_scope', models.CharField(choices=[('strategic', '전략적'), ('mutual', '상호적'), ('independent', '독립적'), ('dependent', '의존적')], default='independent', max_length=20, verbose_name='기여범위')),
                ('target_value', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='목표값')),
                ('target_unit', models.CharField(blank=True, max_length=20, verbose_name='단위')),
                ('actual_value', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='실적값')),
                ('achievement_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='달성률(%)')),
                ('base_score', models.DecimalField(blank=True, decimal_places=1, help_text='Scoring Chart 기반 기본점수', max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='기본점수')),
                ('final_score', models.DecimalField(blank=True, decimal_places=1, help_text='달성률을 반영한 최종점수', max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='최종점수')),
                ('last_checkin_date', models.DateTimeField(blank=True, null=True, verbose_name='마지막 체크인')),
                ('checkin_count', models.IntegerField(default=0, verbose_name='체크인 횟수')),
                ('status', models.CharField(choices=[('PLANNED', '계획'), ('IN_PROGRESS', '진행중'), ('COMPLETED', '완료')], default='PLANNED', max_length=20, verbose_name='상태')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='employees.employee', verbose_name='직원')),
                ('evaluation_period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='evaluations.evaluationperiod', verbose_name='평가기간')),
            ],
            options={
                'verbose_name': 'Task',
                'verbose_name_plural': 'Tasks',
                'ordering': ['-weight', 'title'],
            },
        ),
        migrations.CreateModel(
            name='ComprehensiveEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contribution_score', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, verbose_name='기여도 점수')),
                ('expertise_score', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, verbose_name='전문성 점수')),
                ('impact_score', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, verbose_name='영향력 점수')),
                ('contribution_achieved', models.BooleanField(default=False, verbose_name='기여도 달성')),
                ('expertise_achieved', models.BooleanField(default=False, verbose_name='전문성 달성')),
                ('impact_achieved', models.BooleanField(default=False, verbose_name='영향력 달성')),
                ('manager_grade', models.CharField(blank=True, choices=[('S', 'S등급'), ('A+', 'A+등급'), ('A', 'A등급'), ('B+', 'B+등급'), ('B', 'B등급'), ('C', 'C등급'), ('D', 'D등급')], max_length=5, null=True, verbose_name='1차 평가등급')),
                ('manager_comments', models.TextField(blank=True, verbose_name='1차 평가의견')),
                ('manager_evaluated_date', models.DateField(blank=True, null=True, verbose_name='1차 평가일')),
                ('final_grade', models.CharField(blank=True, choices=[('S', 'S등급'), ('A+', 'A+등급'), ('A', 'A등급'), ('B+', 'B+등급'), ('B', 'B등급'), ('C', 'C등급'), ('D', 'D등급')], max_length=5, null=True, verbose_name='최종등급')),
                ('calibration_comments', models.TextField(blank=True, verbose_name='조정의견')),
                ('calibration_date', models.DateField(blank=True, null=True, verbose_name='Calibration 완료일')),
                ('status', models.CharField(choices=[('DRAFT', '작성중'), ('SUBMITTED', '제출완료'), ('IN_REVIEW', '검토중'), ('COMPLETED', '확정')], default='DRAFT', max_length=20, verbose_name='상태')),
                ('overall_score', models.DecimalField(blank=True, decimal_places=1, help_text='3대 평가 평균 점수', max_digits=3, null=True, verbose_name='종합점수')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('calibration_session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='evaluations', to='evaluations.calibrationsession', verbose_name='Calibration Session')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comprehensive_evaluations', to='employees.employee', verbose_name='직원')),
                ('manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='evaluations_as_manager', to='employees.employee', verbose_name='1차 평가자')),
                ('contribution_evaluation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='evaluations.contributionevaluation', verbose_name='기여도 평가')),
                ('evaluation_period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='evaluations.evaluationperiod', verbose_name='평가기간')),
                ('expertise_evaluation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='evaluations.expertiseevaluation', verbose_name='전문성 평가')),
                ('impact_evaluation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='evaluations.impactevaluation', verbose_name='영향력 평가')),
            ],
            options={
                'verbose_name': '종합평가',
                'verbose_name_plural': '종합평가',
                'ordering': ['-evaluation_period__year', 'employee__name'],
                'unique_together': {('employee', 'evaluation_period')},
            },
        ),
    ]
