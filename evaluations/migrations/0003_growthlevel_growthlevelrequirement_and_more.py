# Generated by Django 5.2.4 on 2025-07-30 04:52

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('employees', '__first__'),
        ('evaluations', '0002_expertiseevaluation_business_acumen_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='GrowthLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(unique=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='레벨')),
                ('name', models.CharField(max_length=50, verbose_name='레벨명')),
                ('description', models.TextField(verbose_name='레벨 설명')),
                ('min_contribution_score', models.DecimalField(decimal_places=1, default=2.0, max_digits=3, verbose_name='최소 기여도 점수')),
                ('min_expertise_score', models.DecimalField(decimal_places=1, default=2.0, max_digits=3, verbose_name='최소 전문성 점수')),
                ('min_impact_score', models.DecimalField(decimal_places=1, default=2.0, max_digits=3, verbose_name='최소 영향력 점수')),
                ('required_evaluation_periods', models.IntegerField(default=2, help_text='해당 레벨에서 몇 번의 평가를 받아야 하는지', verbose_name='필요 평가기간 수')),
                ('min_consecutive_achievements', models.IntegerField(default=1, help_text='연속으로 목표를 달성해야 하는 횟수', verbose_name='연속 달성 필요 횟수')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '성장레벨',
                'verbose_name_plural': '성장레벨',
                'ordering': ['level'],
            },
        ),
        migrations.CreateModel(
            name='GrowthLevelRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('TECHNICAL', '기술역량'), ('LEADERSHIP', '리더십'), ('BUSINESS', '비즈니스'), ('COMMUNICATION', '소통'), ('PROBLEM_SOLVING', '문제해결')], max_length=50, verbose_name='역량 카테고리')),
                ('requirement', models.TextField(verbose_name='요구사항 설명')),
                ('priority', models.IntegerField(default=1, help_text='1=낮음, 5=높음', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='우선순위')),
                ('is_mandatory', models.BooleanField(default=True, verbose_name='필수 여부')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('growth_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirements', to='evaluations.growthlevel', verbose_name='성장레벨')),
            ],
            options={
                'verbose_name': '성장레벨 요구사항',
                'verbose_name_plural': '성장레벨 요구사항',
                'ordering': ['growth_level__level', '-priority', 'category'],
            },
        ),
        migrations.CreateModel(
            name='EmployeeGrowthHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_type', models.CharField(choices=[('PROMOTION', '승급'), ('DEMOTION', '강등'), ('MAINTAIN', '유지'), ('INITIAL', '초기설정')], max_length=20, verbose_name='변경 유형')),
                ('change_reason', models.TextField(blank=True, verbose_name='변경 사유')),
                ('contribution_score', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, verbose_name='기여도 점수')),
                ('expertise_score', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, verbose_name='전문성 점수')),
                ('impact_score', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, verbose_name='영향력 점수')),
                ('overall_score', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, verbose_name='종합 점수')),
                ('meets_score_requirement', models.BooleanField(default=False, verbose_name='점수 요구사항 충족')),
                ('consecutive_achievements', models.IntegerField(default=0, verbose_name='연속 달성 횟수')),
                ('is_promotion_eligible', models.BooleanField(default=False, verbose_name='승급 자격 충족')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='growth_history', to='employees.employee', verbose_name='직원')),
                ('evaluation_period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='evaluations.evaluationperiod', verbose_name='평가기간')),
                ('current_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='current_employees', to='evaluations.growthlevel', verbose_name='현재 레벨')),
                ('previous_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='previous_employees', to='evaluations.growthlevel', verbose_name='이전 레벨')),
            ],
            options={
                'verbose_name': '성장레벨 이력',
                'verbose_name_plural': '성장레벨 이력',
                'ordering': ['-evaluation_period__year', '-evaluation_period__period_type'],
                'unique_together': {('employee', 'evaluation_period')},
            },
        ),
        migrations.CreateModel(
            name='PerformanceTrend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contribution_trend', models.CharField(blank=True, choices=[('IMPROVING', '개선'), ('STABLE', '안정'), ('DECLINING', '하락'), ('VOLATILE', '변동')], max_length=20, null=True, verbose_name='기여도 트렌드')),
                ('expertise_trend', models.CharField(blank=True, choices=[('IMPROVING', '개선'), ('STABLE', '안정'), ('DECLINING', '하락'), ('VOLATILE', '변동')], max_length=20, null=True, verbose_name='전문성 트렌드')),
                ('impact_trend', models.CharField(blank=True, choices=[('IMPROVING', '개선'), ('STABLE', '안정'), ('DECLINING', '하락'), ('VOLATILE', '변동')], max_length=20, null=True, verbose_name='영향력 트렌드')),
                ('overall_trend', models.CharField(blank=True, choices=[('IMPROVING', '개선'), ('STABLE', '안정'), ('DECLINING', '하락'), ('VOLATILE', '변동')], max_length=20, null=True, verbose_name='종합 트렌드')),
                ('contribution_change_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='기여도 변화율(%)')),
                ('expertise_change_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='전문성 변화율(%)')),
                ('impact_change_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='영향력 변화율(%)')),
                ('overall_change_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='종합 변화율(%)')),
                ('insights', models.JSONField(blank=True, default=dict, help_text='AI 분석 결과 저장', verbose_name='분석 인사이트')),
                ('recommendations', models.JSONField(blank=True, default=list, help_text='개인 성장을 위한 추천사항', verbose_name='개선 추천사항')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_trends', to='employees.employee', verbose_name='직원')),
                ('evaluation_period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='evaluations.evaluationperiod', verbose_name='평가기간')),
            ],
            options={
                'verbose_name': '성과 트렌드',
                'verbose_name_plural': '성과 트렌드',
                'ordering': ['-evaluation_period__year', '-evaluation_period__period_type'],
                'unique_together': {('employee', 'evaluation_period')},
            },
        ),
    ]
